#!/usr/bin/env bash
#
# manually download and compile the tilde text-editor on a debian like system
#
# Author: ulno
# Create date: 2017-07-12
#
#echo "This is currently broken - need to check with author why."
#exit 1

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2;exit 1; }

#MAKEFLAGS="BUILDVERSION=release LCFLAGS=-DT3_DONT_CHECK_VERSION LCXXFLAGS=-DT3_DONT_CHECK_VERSION -j4"
MAKEFLAGS="LCFLAGS=-DT3_DONT_CHECK_VERSION LCXXFLAGS=-DT3_DONT_CHECK_VERSION -j4"
#MAKEFLAGS=""

if [[ $# -gt 1 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF
iotempower tilde editor from git installer
=======================================

Welcome to the iotempower tilde editor for debian-systems installer (it might also
work for other systems, but does nto automatically install dependencies).

Run as:
install_tilde_git [clean]

Specifying clean as option will clear the cache and re-download everything.

EOF
exit 1
fi


TILDEDIR="$IOTEMPOWER_EXTERNAL/tilde"
#gitver="-git$(date +%Y%m%d)"
gitver=""
#libp="lib"
libp=""

remove_debug_from_make() {
    # patch makefile to not create debug info
    path="$(pwd)"
    cd "$1/src"
    # remove line with -D.*DEBUG
    grep -E -v '\-D.*DEBUG' Makefile > Makefile.new
    mv Makefile.new Makefile
    cd "$path"
}

if [[ ! -d "$TILDEDIR" || "$*" = "clean" ]]; then
    /usr/bin/dpkg --search /usr/bin/dpkg &>/dev/null && {
        echo "Installing development packages (you might be asked for sudo passwd)."
        sudo apt install libunistring-dev xclip libnl-3-dev libnl-genl-3-dev \
            libssl-dev build-essential libncurses5-dev libsigc++-2.0-dev libpcre3-dev \
            libxcb1-dev wget libtool-bin autoconf gettext \
            libacl1-dev libattr1-dev libfuse-dev libgpm-dev \
            libunistring-dev pkg-config

    }

    echo "Deleting cache and re-downloading tilde source."
    echo
    rm -rf "$TILDEDIR" &> /dev/null
    mkdir -p "$TILDEDIR"
    cd "$TILDEDIR"
    git clone https://github.com/gphalkes/transcript ${libp}transcript$gitver
    git clone https://github.com/gphalkes/t3config ${libp}t3config$gitver
    git clone https://github.com/gphalkes/t3key ${libp}t3key$gitver
    git clone https://github.com/gphalkes/t3window ${libp}t3window$gitver
    git clone https://github.com/ulno/t3widget ${libp}t3widget$gitver
    #cd ${libp}t3widget$gitver
    #git checkout tags/version-0.5.4 -b iotempower
    #cd ..
    git clone https://github.com/gphalkes/t3highlight ${libp}t3highlight$gitver
    git clone https://github.com/gphalkes/tilde tilde$gitver
    #cd tilde$gitver
    #git checkout tags/version-0.3.9 -b iotempower
    #cd ..
    wget https://os.ghalkes.nl/LLnextgen/releases/LLnextgen-0.5.5.tgz
    tar xzf LLnextgen-0.5.5.tgz
    mv LLnextgen-0.5.5 llnextgen
    rm LLnextgen-0.5.5.tgz
    git clone https://github.com/gphalkes/t3shared
    git clone https://github.com/gphalkes/makesys
    remove_debug_from_make tilde$gitver
    remove_debug_from_make ${libp}transcript$gitver
    remove_debug_from_make ${libp}t3widget$gitver
else
    # just update
    cd "$TILDEDIR"
    for d in $(ls); do
        if [[ ! "$d" = makesys && ! "$d" = t3shared ]]; then
        cd "$TILDEDIR/$d"
            git pull
        fi
    done
fi
export CFLAGS="-O2 -D_POSIX_C_SOURCE=200809L"

cd "$TILDEDIR/llnextgen"
./configure --prefix=/usr CFLAGS="$CFLAGS"
make $MAKEFLAGS
strip -s -o "$IOTEMPOWER_LOCAL/bin/LLnextgen" "LLnextgen"

cd "$TILDEDIR"
echo "Building tilde."
./t3shared/doall make $MAKEFLAGS -C src

echo "Installing tilde."
strip -s -o "$IOTEMPOWER_LOCAL/bin/tilde" "$TILDEDIR/tilde/src/.objects/edit"
# TODO consider:
# link to /usr/local/bin/tilde
# update-alternatives --install /usr/bin/editor editor /usr/local/bin/tilde 50
