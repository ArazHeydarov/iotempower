#@IgnoreInspection BashAddShebang
# Read extra configuration from /boot/config.txt

_BOOT_CONFIG="/boot/config.txt"
_WIFI_CONFIG="/boot/wifi.txt"
_WIFI_IN_CONFIG="/boot/wifi-in.txt"

if [[ -e "$_BOOT_CONFIG" ]]; then
    # check if otg-mode was enabled
    sed 's/\r$//' "$_BOOT_CONFIG"|egrep '^\s*dtoverlay=dwc2\s*' &> /dev/null && otg_on=1
fi

if [[ -e "$_WIFI_CONFIG" ]]; then
    mapfile -t lines < <(sed 's/\r$//' "$_WIFI_CONFIG"| egrep -v '\w*#|^$')
    count=${#lines[@]}
    if [[ $count -eq 1 ]]; then  # only one param given -> IOTEMPOWER_AP_PASSWORD
        add_id=1
        uiot_ap_password="${lines[0]}"
    elif [[ $count -eq 2 ]]; then
        uiot_ap_name="${lines[0]}"
        uiot_ap_password="${lines[1]}"
    fi

    if [[ "$uiot_ap_password" ]]; then # pw was given, so start an accesspoint
        if [[ ! "$uiot_ap_name" ]]; then # no ap name, so make one up
            add_id=1
            uiot_ap_name=iotempire
        fi

        # overwrite some configuration variables
        #IOTEMPOWER_AP_DEVICES="wlan1 wlan0"

        # Name of accesspoint to create
        export IOTEMPOWER_AP_NAME="$uiot_ap_name"

        if [[ "$add_id" = 1 ]]; then
            export IOTEMPOWER_AP_ADDID=yes
        else
            export IOTEMPOWER_AP_ADDID=no
        fi

        export IOTEMPOWER_AP_PASSWORD="$uiot_ap_password"

        # channel, bridge, and mqtt data taken straight from iotempower.conf
    fi
    # no accesspoint if file empty or not existent
fi

if [[ -e "$_WIFI_IN_CONFIG" ]]; then
    mapfile -t lines < <(sed 's/\r$//' "$_WIFI_IN_CONFIG" | egrep -v '\w*#|^$')
    count=${#lines[@]}
    if [[ $count -eq 1 ]]; then  # only one param given -> wifi without pw
        uiot_wifi_name="${lines[0]}"
    elif [[ $count -eq 2 ]]; then
        uiot_wifi_name="${lines[0]}"
        uiot_wifi_password="${lines[1]}"
    elif [[ $count -eq 3 ]]; then
        uiot_wifi_name="${lines[0]}"
        uiot_wifi_password="${lines[1]}"
        uiot_wifi_user="${lines[2]}"
    fi
fi
