[platformio]
default_envs = ${sysenv.board}

[common]
; > @2.0.4 creates weird errors with FastLed - TODO: check if can be updated one day
; reference: https://forum.blueforcer.de/d/262-trouble-to-compile-the-firmware
; platform = espressif8266@2.0.4 // this problem seems fixed
platform = espressif8266
framework = arduino
monitor_speed = 115200
; eagle.flash.1m.ld -> build always a small image for little Ram
build_flags = 
    -w
    -Wl,-Teagle.flash.1m.ld
;build_flags = -Wl,-Teagle.flash.512k0.ld

;src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<setup.cpp>

extra_scripts =
  pre:pre_extra_script.py

; TODO: re-check if this is necessary or if we can go back to 80MHz
cpu_speed = 160000000L
lib_deps =
  https://github.com/jedisct1/libhydrogen
  https://github.com/gioblu/PJON
  PubSubClient
  DHT
  DallasTemperature
  FastLED
  U8g2
  1574
  3672
  5256
  439
  603
  63

;   AsyncMqttClient -> moved to PubSubClient, handling the responses for finishing the publish was too hard

; 63: MFRC522 RFID reader connected via SPI
; https://github.com/miguelbalboa/rfid

; Now directly in iotempower
;  https://github.com/SteveQuinn1/SparkFun_APDS-9960_Sensor_Arduino_Library

; This one is obsolete as we are now doing our own configuration and adoption
; through a serially connected esp (dongle)
;   https://github.com/ulno/WiFiManager.git


; === APDS9960 gesture/color/proximity by SparkFun Electronics (maintainer)
;  304: https://github.com/sparkfun
;  better but not good: https://github.com/jonn26/SparkFun_APDS-9960_Sensor_Arduino_Library
; best as non blocking: https://github.com/SteveQuinn1/SparkFun_APDS-9960_Sensor_Arduino_Library

; === Light sensor ===
;  439: https://github.com/claws/BH1750
;  603: https://github.com/sparkfun/SparkFun_TSL2561_Arduino_Library

; === Barometer ===
; 3672: Seeedstudio's BMP085/BMP180 library: https://github.com/Seeed-Studio/Grove_Barometer_Sensor
; 5256: Seeedstudio's BMP280 library: https://github.com/Seeed-Studio/Grove_BMP280

; === Displays ===
; U82g
; 1574: LiquidCrystal_I2C from Tony Kambo: https://github.com/tonykambo/LiquidCrystal_I2C

; === Gyroscope(s) ===
; integrated into project -> see how to reference library
;  I2Cdevlib-Core=https://github.com/ulno/i2cdevlib
;  I2Cdevlib-MPU6050: MPU6050 part from i2cdevlib
; 2824: MPU 6050 by tockn: https://github.com/tockn/MPU6050_tockn <- seems broken
; integrated into project -> 1900: for HX711 scale/weigh module https://github.com/olkal/HX711_ADC
; TODO: consider to use better library instead or in addition to 578 for sensor 
; fusing for MPU-9250: https://github.com/sparkfun/SparkFun_MPU-9250_Breakout_Arduino_Library
; not used: 578: Sensors from James Smith: https://github.com/loopj/i2c-sensor-hal


; nodemcu does most off the usb-connected esp8266: original, wemos d1 mini + pro, feather huzzah from adafruit
[env:nodemcu]
board = nodemcuv2
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
extra_scripts = ${common.extra_scripts}


[env:wemos_d1_mini]
board = d1_mini
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
extra_scripts = ${common.extra_scripts}


; [env:wemos_d1_mini_pro]
; now same as d1_mini


[env:olimex]
board = modwifi
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
extra_scripts = ${common.extra_scripts}


[env:esp-m]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 921600
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}


[env:sonoff]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}

[env:sonoff_pow]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}


[env:esp8266]
# attention LED_INTERNAL might be mapped on 1
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}


; TODO: check: does this still destroys the other esp libraries
[env:esp32]
# attention LED_INTERNAL might be mapped on 1
board = lolin32
platform = espressif32
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
;board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
; 5819 ESP32_WriteAnalog
lib_deps = ${common.lib_deps}
    5819
upload_resetmethod = nodemcu
;upload_speed = 115200
extra_scripts = ${common.extra_scripts}
