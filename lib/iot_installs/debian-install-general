#!/bin/bash

# make sure curl is not installed
if ! debian-query curl > /dev/null; then
    echo "curl is not installed, installing. Please wait..."
    debian-install curl
    # check error and return 1 if not found
    if [[ $? != 0 ]]; then
        echo "curl could not be installed, exiting now."
        exit 1
    fi
    echo "curl has been installed successfully"
fi

# check nodejs version
installed_version=$(node -v | sed 's/v//') # Remove the 'v' prefix from version

# Define the minimum required version
min_version="21"

# Use sort with version sort flag to compare versions, and check the first line
if [ "$(printf "%s\n%s" "$min_version" "$installed_version" | sort -V | head -n1)" = "$min_version" ]; then
    if [ "$installed_version" = "$min_version" ] || [ "$(printf "%s\n%s" "$min_version" "$installed_version" | sort -V | head -n2 | tail -n1)" = "$installed_version" ]; then
        echo "Node.js version $installed_version is installed, meets the minimum required version $min_version."
    else
        echo "Node.js version is higher than the minimum required version $min_version."
    fi
else
    echo "Node.js version $installed_version is installed, does not meet the minimum required version $min_version."
    # install current node.js   
    curl -fsSL "https://deb.nodesource.com/setup_""$min_version"".x" | bash - && debian-install nodejs
fi


PACKAGE_LIST="build-essential git mosquitto-clients virtualenv python-venv make rsync haveged jq nodejs npm"
to_install=$(filter_packages debian-query $PACKAGE_LIST)

echo "Installing: $to_install..."
debian-install $to_install
echo "Installation of $to_install complete."

# curl git mosquitto python-virtualenv rsync haveged jq # general
# ./arch-install iptables bridge-utils hostapd dnsmasq # router and networking

# ./arch-install mc micro # this is optional: mc is nicer file management in cli, micro a nicer editor than nano

# sudo systemctl stop mosquitto
# sudo systemctl disable mosquitto


